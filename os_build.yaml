---
- hosts: builder.octo-emerging.redhataicoe.com
  become: true
  gather_facts: true
  collections:
    - containers.podman
  tasks:
  - name: install podman
    package:
      name: podman
      state: present

  - name: add the directory .aws to home
    file:
      path: ~/.aws
      state: directory
      mode: '0700'

  - name: create the file credentials
    copy:
      content: |
        [default]
        aws_access_key_id = {{ lookup("env", "AWS_ACCESS_KEY_ID") }}
        aws_secret_access_key = {{ lookup("env", "AWS_SECRET_ACCESS_KEY") }}
      dest: ~/.aws/credentials
      mode: '0600'

  - name: create the file config
    copy:
      content: |
        [default]
        region = us-east-1
      dest: ~/.aws/config
      mode: '0600'

  - name: podman build ami
    containers.podman.podman_container:
      name: osbuild
      image: quay.io/centos-bootc/bootc-image-builder:latest
      state: started
      privileged: true
      restart: false
      restart_policy: "no"
      command: ["--type", "ami", "--aws-ami-name", "centos-bootc-x86-rc", "--aws-bucket", "{{ bucket }}", "--aws-region", "{{ region }}", "--target-arch", "{{ arch }}", "{{ image }}"]
      volumes:
      - "/{{ ansible_user_id }}/.aws:/root/.aws"

- name: Get osbuild container info
  containers.podman.podman_container_info:
    name: osbuild
  register: container_info

- name: Wait for osbuild container to exit
  command: sleep 10
  register: result
  until: container_info.containers[0].State.Status != 'running' if container_info.containers else true
  retries: 60
  delay: 10

- block:
  - name: Check if container exited with status 0
    assert:
      that: container_info.container.State.ExitCode == 0
      fail_msg: "Container exited with error"
  rescue:
  - name: Stop the playbook if container exited with error
    fail:
      msg: "Container exited with error"
  always:
  - name: Remove the container
    containers.podman.podman_container:
      name: osbuild
      state: absent
